/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package TemaTest;




public class App {

    public App() {/* compiled code */}

    public static void main(java.lang.String[] strings) {

        if (strings == null) { //nu am argumente
            System.out.print("Hello world!");
        } else if (strings[0].equals("-cleanup-all")) {
            Utilizator.cleanup_all();
        } else if (strings[0].equals("-create-user")) { //am cel putin un argument

            if (strings.length == 1) { //am doar primul argument,deci nici username sau parola
                System.out.print("{'status':'error','message':'Please provide username'}");
            } else if (strings.length == 2) { //am doar primul argument si username-ul,dar nu si parola
                System.out.print("{'status':'error','message':'Please provide password'}");
            } else if (strings.length == 3) { //am tot ce imi trebuie,deci e posibil sa apara user nou
                String username = null;
                String password = null;
                if (strings[1].length() > 3)
                    username = strings[1].substring(3);
                if (strings[2].length() > 3)
                    password = strings[2].substring(3);
                if (username != null && password != null && Utilizator.verifica_utilizator_unic(username) == 0)
                    System.out.print("{'status':'error','message':'User already exists'}");
                else {
                    Utilizator.adauga_utilizator(new Utilizator(username, password));
                    System.out.print("{'status':'ok','message':'User created successfully'}");
                }


            }

        } else if (strings[0].equals("-create-post")) {

            if (strings.length < 3) {
                System.out.print("{'status':'error','message':'You need to be authenticated'}");
            } else if (strings.length == 3) {

                String username = strings[1].substring(3);
                String password = strings[2].substring(3);
                if (Utilizator.verifica_utilizator_unic(username) == 1) { // nu avem acest user
                    System.out.print("{'status':'error','message':'Login failed'}");
                } else { //il avem

                    if (Utilizator.check_password(username, password) == 0) {
                        System.out.print("{'status':'error','message':'Login failed'}");
                    } else {
                        System.out.print("{'status':'error','message':'No text provided'}");
                    }
                }

            } else {

                String username = strings[1].substring(3);
                String password = strings[2].substring(3);

                String text_postare = strings[3].substring(6);
                if (text_postare.length() > 300) {
                    System.out.println("{'status':'error','message':'Post text length exceeded'}");
                } else {

                    for (int i = 0; i < Utilizator.numar_utilizatori; i++) {
                        if (Utilizator.utilizatori[i].nume_utilizator.equals(username) && Utilizator.check_password(username, password) == 1) {
                            Utilizator.utilizatori[i].adauga_postare(text_postare);
                            System.out.print("{'status':'ok','message':'Post added successfully'}");
                            break;
                        }
                    }

                }

            }

        } else if (strings[0].equals("-delete-post-by-id")) {

            if (strings.length == 1) {
                System.out.print("{'status':'error','message':'You need to be authenticated'}");
            } else if (strings.length == 2) {
                System.out.print("{'status':'error','message':'You need to be authenticated'}");
            } else {
                String username = strings[1].substring(3);
                String password = strings[2].substring(3);
                if (Utilizator.verifica_utilizator_unic(username) == 1) { //nu exista user-ul
                    System.out.print("{'status':'error','message':'Login failed'}");
                } else {
                    if (Utilizator.check_password(username, password) == 0) {
                        System.out.print("{'status':'error','message':'Login failed'}");
                    } else {
                        int i;
                        for (i = 0; i < Utilizator.numar_utilizatori; i++)
                            if (Utilizator.utilizatori[i].nume_utilizator.equals(username) && Utilizator.utilizatori[i].getParola().equals(password))
                                break;
                        String id = strings[3].substring(4);
                        if (Utilizator.utilizatori[i].sterge_postare(id) == 0) {
                            System.out.print("{'status':'error','message':'The identifier was not valid'}");
                        } else {
                            System.out.print("{'status':'ok','message':'Post deleted successfully'}");
                        }


                    }
                }
            }

        } else if (strings[0].equals("-follow-user-by-username")) {

            if (strings.length == 1) {
                System.out.print("{'status':'error','message':'You need to be authenticated'}");
            } else if (strings.length == 2) {
                System.out.print("{'status':'error','message':'You need to be authenticated'}");
            } else if (strings.length == 3) {
                String username = strings[1].substring(3);
                String password = strings[2].substring(3);
                if (Utilizator.verifica_utilizator_unic(username) == 1) { //nu exista acest user
                    System.out.print("{'status':'error','message':'Login failed'}");
                } else { //exista acest user
                    if (Utilizator.check_password(username, password) == 0) { //credentiale eronate
                        System.out.print("{'status':'error','message':'Login failed'}");
                    } else {
                        System.out.print("{'status':'error','message':'No username to follow was provided'}");
                    }
                }
            } else if (strings.length == 4) {
                String username1 = strings[1].substring(3);
                String password = strings[2].substring(3);
                String username2 = strings[3].substring(10);
                if (Utilizator.verifica_utilizator_unic(username2) == 1) { //nu exista userul caruia vrem sa ii dam follow
                    System.out.print("{'status':'error','message':'The username to follow was not valid'}");
                } else { //chiar exista acest user
                    int i;
                    for (i = 0; i < Utilizator.numar_utilizatori; i++)
                        if (Utilizator.utilizatori[i].nume_utilizator.equals(username1) && Utilizator.utilizatori[i].getParola().equals(password))
                            break;
                    if (Utilizator.utilizatori[i].follow(username2) == 0) {
                        System.out.print("{'status':'error','message':'The username to follow was not valid'}");
                    } else {
                        System.out.print("{'status':'ok','message':'Operation executed successfully'}");
                    }

                }
            }

        } else if (strings[0].equals("-unfollow-user-by-username")) {

            if (strings.length == 1) {
                System.out.print("{'status':'error','message':'You need to be authenticated'}");
            } else if (strings.length == 2) {
                System.out.print("{ 'status' : 'error', 'message' : 'You need to be authenticated'}");
            } else if (strings.length == 3) {
                String username = strings[1].substring(3);
                String password = strings[2].substring(3);
                if (Utilizator.verifica_utilizator_unic(username) == 1) { //nu exista user-ul
                    System.out.print("{ 'status' : 'error', 'message' : 'Login failed'}");
                } else { //exista
                    if (Utilizator.check_password(username, password) == 0) {
                        System.out.print("{ 'status' : 'error', 'message' : 'Login failed'}");
                    } else {
                        System.out.print("{ 'status' : 'error', 'message' : 'No username to unfollow was provided'}");
                    }
                }
            } else if (strings.length == 4) {

                String username1 = strings[1].substring(3);
                String password = strings[2].substring(3);
                String username2 = strings[3].substring(10);
                if (Utilizator.verifica_utilizator_unic(username2) == 1) { //nu exista
                    System.out.print("{ 'status' : 'error', 'message' : 'The username to unfollow was not valid'}");
                } else {
                    int i;
                    for (i = 0; i < Utilizator.numar_utilizatori; i++)
                        if (Utilizator.utilizatori[i].nume_utilizator.equals(username1) && Utilizator.utilizatori[i].getParola().equals(password))
                            break;
                    if (Utilizator.utilizatori[i].unfollow(username2) == 0) {
                        System.out.print("{ 'status' : 'error', 'message' : 'The username to unfollow was not valid'}");
                    } else {
                        System.out.print("{ 'status' : 'ok', 'message' : 'Operation executed successfully'}");
                    }
                }

            }

        } else if (strings[0].equals("-like-post")) {

            if (strings.length == 1) {
                System.out.print("{ 'status' : 'error', 'message' : 'You need to be authenticated'}");
            } else if (strings.length == 2) {
                System.out.print("{ 'status' : 'error', 'message' : 'You need to be authenticated'}");
            } else if (strings.length == 3) {
                String username = strings[1].substring(3);
                String password = strings[2].substring(3);
                if (Utilizator.verifica_utilizator_unic(username) == 1) { //nu exista acest user
                    System.out.print("{ 'status' : 'error', 'message' : 'Login failed'}");
                } else { //exista
                    if (Utilizator.check_password(username, password) == 0) { //parola gresita
                        System.out.print("{ 'status' : 'error', 'message' : 'Login failed'}");
                    } else {
                        System.out.print("{ 'status' : 'error', 'message' : 'No post identifier to like was provided'}");
                    }
                }
            } else if (strings.length == 4) {
                String username = strings[1].substring(3);
                String post_id = strings[3].substring(9);
                if (Postare.gaseste_postare(post_id) == 0) { //nu exista postare cu acest id
                    System.out.print("{ 'status' : 'error', 'message' : 'The post identifier to like was not valid'}");
                } else { //exista cu acest id
                    int i;
                    for (i = 0; i < Utilizator.numar_utilizatori; i++)
                        if (Utilizator.utilizatori[i].nume_utilizator.equals(username))
                            break;
                    if (Utilizator.utilizatori[i].apreciaza_postare(post_id) == 0) {
                        System.out.print("{ 'status' : 'error', 'message' : 'The post identifier to like was not valid'}");
                    } else {
                        System.out.print("{ 'status' : 'ok', 'message' : 'Operation executed successfully'}");
                    }
                }
            }
        } else if (strings[0].equals("-unlike-post")) {
            if (strings.length == 1) {
                System.out.print("{ 'status' : 'error', 'message' : 'You need to be authenticated'}");
            } else if (strings.length == 2) {
                System.out.print("{ 'status' : 'error', 'message' : 'You need to be authenticated'}");
            } else if (strings.length == 3) {
                String username = strings[1].substring(3);
                String password = strings[2].substring(3);
                if (Utilizator.verifica_utilizator_unic(username) == 1) { //nu exista acest user
                    System.out.print("{ 'status' : 'error', 'message' : 'Login failed'}");
                } else { //exista
                    if (Utilizator.check_password(username, password) == 0) { //credentiale eronate
                        System.out.print("{ 'status' : 'error', 'message' : 'Login failed'}");
                    } else { //credentiale bune
                        System.out.print("{ 'status' : 'error', 'message' : 'No post identifier to unlike was provided'}");
                    }
                }
            } else if (strings.length == 4) {
                String username = strings[1].substring(3);
                String post_id = strings[3].substring(9);
                if (Postare.gaseste_postare(post_id) == 0) { //nu am gasit postare cu acest id
                    System.out.print("{ 'status' : 'error', 'message' : 'The post identifier to unlike was not valid'}");
                } else { //exista postarea
                    //vezi daca poti da unlike,trebuie sa ii fi dat like inainte
                    if (Utilizator.da_unlike_la_postare(username, post_id) == 0) { //nu era apreciata
                        System.out.print("{ 'status' : 'error', 'message' : 'The post identifier to unlike was not valid'}");
                    } else { //era
                        System.out.print("{ 'status' : 'ok', 'message' : 'Operation executed successfully'}");
                    }
                }
            }
        } else if(strings[0].equals("-comment-post")) {

            if(strings.length == 1) {
                System.out.print("{ 'status' : 'error', 'message' : 'You need to be authenticated'}");
            } else if(strings.length == 2) {
                System.out.print("{ 'status' : 'error', 'message' : 'You need to be authenticated'}");
            } else if(strings.length == 3) {
                String username = strings[1].substring(3);
                String password = strings[2].substring(3);
                if(Utilizator.verifica_utilizator_unic(username) == 1) {  // nu exista acest user
                    System.out.print("{ 'status' : 'error', 'message' : 'Login failed'}");
                } else { //exista
                    if(Utilizator.check_password(username,password) == 0) { //credentiale gresite
                        System.out.print("{ 'status' : 'error', 'message' : 'Login failed'}");
                    } else { //credentiale bune
                        System.out.print("{ 'status' : 'error', 'message' : 'No text provided'}");
                    }
                }
            } else if(strings.length == 5) {
                String username = strings[1].substring(3);
                String post_id = strings[3].substring(9);
                String text = strings[4].substring(6);
                if(text.length() > 300) {
                    System.out.print("{ 'status' : 'error', 'message' : 'Comment text length exceeded'}");
                } else { //comentariu adaugat cu succes
                    int i;
                    for(i = 0;i < Postare.nr_total_postari;i++)
                        if(Postare.postari[i].getId().equals(post_id))
                            break;

                    Postare post = Postare.postari[i];
                    post.adauga_comentariu(username,text,post);
                    System.out.print("{ 'status' : 'ok', 'message' : 'Comment added successfully'}");
                }
            }

        } else if(strings[0].equals("-delete-comment-by-id")) {
            if(strings.length == 1) {
                System.out.print("{ 'status' : 'error', 'message' : 'You need to be authenticated'}");
            } else if(strings.length == 2) {
                System.out.print("{ 'status' : 'error', 'message' : 'You need to be authenticated'}");
            } else if(strings.length == 3) {
                String username = strings[1].substring(3);
                String password = strings[2].substring(3);
                if(Utilizator.verifica_utilizator_unic(username) == 1) {  // nu exista acest user
                    System.out.print("{ 'status' : 'error', 'message' : 'Login failed'}");
                } else { //exista
                    if(Utilizator.check_password(username,password) == 0) { //credentiale proaste
                        System.out.print("{ 'status' : 'error', 'message' : 'Login failed'}");
                    } else { //credentiale bune
                        System.out.print("{ 'status' : 'error', 'message' : 'No identifier was provided'}");
                    }
                }
            } else if(strings.length == 4) {
                String username = strings[1].substring(3);
                String comment_id = strings[3].substring(4);
                if(Comentariu.gaseste_comentariu(comment_id) == 0) { //nu avem comentariu cu acest id
                    System.out.print("{ 'status' : 'error', 'message' : 'The identifier was not valid'}");
                } else { //avem
                    int i;
                    Postare postare = null;
                    for(i = 0; i < Comentariu.nr_total_comentarii;i++)
                        if(Comentariu.comentarii[i].getId().equals(comment_id) && Comentariu.comentarii[i].owner_name.equals(username)) {
                            postare = Comentariu.comentarii[i].postare;
                            break;
                        }
                    if(i >= Comentariu.nr_total_comentarii) { //nu e bine
                        System.out.print("{ 'status' : 'error', 'message' : 'The identifier was not valid'}");
                    } else {
                        postare.sterge_comentariu(comment_id);
                        System.out.print("{ 'status' : 'ok', 'message' : 'Operation executed successfully'}");
                    }
                }
            }
        } else if(strings[0].equals("-like-comment")) {
            if(strings.length == 1) {
                System.out.print("{ 'status' : 'error', 'message' : 'You need to be authenticated'}");
            } else if(strings.length == 2) {
                System.out.print("{ 'status' : 'error', 'message' : 'You need to be authenticated'}");
            } else if(strings.length == 3) {
                String username = strings[1].substring(3);
                String password = strings[2].substring(3);
                if(Utilizator.verifica_utilizator_unic(username) == 1) { //nu exista user-ul
                    System.out.print("{ 'status' : 'error', 'message' : 'Login failed'}");
                } else { //exista
                    if(Utilizator.check_password(username,password) == 0) { //credentiale gresite
                        System.out.print("{ 'status' : 'error', 'message' : 'Login failed'}");
                    } else { //credentiale bune
                        System.out.print("{ 'status' : 'error', 'message' : 'No comment identifier to like was provided'}");
                    }
                }
            } else if(strings.length == 4) {
                String username = strings[1].substring(3);
                String comment_id = strings[3].substring(12);
                if(Comentariu.gaseste_comentariu(comment_id) == 0) { //nu exista comentariul
                    System.out.print("{ 'status' : 'error', 'message' : 'The comment identifier to like was not valid'}");
                } else { //exista
                    if(Comentariu.apreciaza_comentariu(username,comment_id) == 0) { //nu s-a putut
                        System.out.print("{ 'status' : 'error', 'message' : 'The comment identifier to like was not valid'}");
                    } else {
                        System.out.print("{ 'status' : 'ok', 'message' : 'Operation executed successfully'}");
                    }
                }
            }
        } else if(strings[0].equals("-unlike-comment")) {
            if(strings.length == 1) {
                System.out.print("{ 'status' : 'error', 'message' : 'You need to be authenticated'}");
            } else if(strings.length == 2) {
                System.out.print("{ 'status' : 'error', 'message' : 'You need to be authenticated'}");
            } else if(strings.length == 3) {
                String username = strings[1].substring(3);
                String password = strings[2].substring(3);
                if(Utilizator.verifica_utilizator_unic(username) == 1) { //nu exista user-ul
                    System.out.print("{ 'status' : 'error', 'message' : 'Login failed'}");
                } else { //exista
                    if(Utilizator.check_password(username,password) == 0) { //credentiale gresite
                        System.out.print("{ 'status' : 'error', 'message' : 'Login failed'}");
                    } else { //credentiale bune
                        System.out.print("{ 'status' : 'error', 'message' : 'No comment identifier to unlike was provided'}");
                    }
                }
            } else if(strings.length == 4) {
                String username = strings[1].substring(3);
                String comment_id = strings[3].substring(12);
                if(Comentariu.gaseste_comentariu(comment_id) == 0) { //nu avem acest comentariu
                    System.out.print("{ 'status' : 'error', 'message' : 'The comment identifier to unlike was not valid'}");
                } else { //il avem
                    if(Comentariu.da_unlike_la_comentariu(username,comment_id) == 0) {
                        System.out.print("{ 'status' : 'error', 'message' : 'The comment identifier to unlike was not valid'}");
                    } else {
                        System.out.print("{ 'status' : 'ok', 'message' : 'Operation executed successfully'}");
                    }
                }
            }
        } else if(strings[0].equals("-get-followings-posts")) {
            if(strings.length == 1) {
                System.out.print("{ 'status' : 'error', 'message' : 'You need to be authenticated'}");
            } else if(strings.length == 2) {
                System.out.print("{ 'status' : 'error', 'message' : 'You need to be authenticated'}");
            } else if(strings.length == 3) {
                String username = strings[1].substring(3);
                String password = strings[2].substring(3);
                if(Utilizator.verifica_utilizator_unic(username) == 1) { //nu exista acest user
                    System.out.print("{ 'status' : 'error', 'message' : 'Login failed'}");
                } else {
                    if(Utilizator.check_password(username,password) == 0) { //credentiale gresite
                        System.out.print("{ 'status' : 'error', 'message' : 'Login failed'}");
                    } else { //credentiale bune
                        Utilizator user = null;
                        for(int j = 0; j < Utilizator.numar_utilizatori;j++)
                            if(Utilizator.utilizatori[j].nume_utilizator.equals(username)) {
                                user = Utilizator.utilizatori[j];
                                break;
                            }
                        user.getFollowings();
                    }
                }
            }
        } else if(strings[0].equals("-get-user-posts")) {
            if(strings.length == 1) {
                System.out.print("{ 'status' : 'error', 'message' : 'You need to be authenticated'}");
            } else if(strings.length == 2) {
                System.out.print("{ 'status' : 'error', 'message' : 'You need to be authenticated'}");
            } else if(strings.length == 3) {
                String username = strings[1].substring(3);
                String password = strings[2].substring(3);
                if(Utilizator.verifica_utilizator_unic(username) == 1) { //nu exista acest user
                    System.out.print("{ 'status' : 'error', 'message' : 'Login failed'}");
                } else { //exista
                    if(Utilizator.check_password(username,password) == 0) { //credentiale gresite
                        System.out.print("{ 'status' : 'error', 'message' : 'Login failed'}");
                    } else { //credentiale bune
                        System.out.print("{ 'status' : 'error', 'message' : 'No username to list posts was provided'}");
                    }
                }
            } else if(strings.length == 4) {
                String username = strings[1].substring(3);
                String username2 = strings[3].substring(10);
                if(Utilizator.verifica_utilizator_unic(username2) == 1) { //nu exista acest user
                    System.out.print("{ 'status' : 'error', 'message' : 'The username to list posts was not valid'}");
                } else { //exista
                    Utilizator user1 = null;
                    for(int k = 0; k < Utilizator.numar_utilizatori;k++)
                        if(Utilizator.utilizatori[k].nume_utilizator.equals(username)) {
                            user1 = Utilizator.utilizatori[k];
                            break;
                        }

                    if(user1.getUserPosts(username2) == 0)  //nu il are la follow
                        System.out.print("{ 'status' : 'error', 'message' : 'The username to list posts was not valid'}");

                }
            }
        } else if(strings[0].equals("-get-post-details")) {
            if(strings.length == 1) {
                System.out.print("{ 'status' : 'error', 'message' : 'You need to be authenticated'}");
            } else if(strings.length == 2) {
                System.out.print("{ 'status' : 'error', 'message' : 'You need to be authenticated'}");
            } else if(strings.length == 3) {
                String username = strings[1].substring(3);
                String password = strings[2].substring(3);
                if(Utilizator.verifica_utilizator_unic(username) == 1) { //nu exista user-ul
                    System.out.print("{ 'status' : 'error', 'message' : 'Login failed'}");
                } else { //exista
                    if(Utilizator.check_password(username,password) == 0) { //credentiale eronate
                        System.out.print("{ 'status' : 'error', 'message' : 'Login failed'}");
                    } else { //credentiale corecte
                        System.out.print("{ 'status' : 'error', 'message' : 'No post identifier was provided'}");
                    }
                }
            } else if(strings.length == 4) {
                String post_id = strings[3].substring(9);
                if(Postare.gaseste_postare(post_id) == 0) { //nu am gasit postarea
                    System.out.print("{ 'status' : 'error', 'message' : 'The post identifier was not valid'}");
                } else { // am gasit-o
                    Postare post = null;
                    for(int i = 0; i < Postare.nr_total_postari;i++)
                        if(Postare.postari[i].getId().equals(post_id)) {
                            post = Postare.postari[i];
                            break;
                        }
                    post.getPostDetails();
                }
            }
        } else if(strings[0].equals("-get-following")) {
            if(strings.length == 1) {
                System.out.print("{ 'status' : 'error', 'message' : 'You need to be authenticated'}");
            } else if(strings.length == 2) {
                System.out.print("{ 'status' : 'error', 'message' : 'You need to be authenticated'}");
            } else if(strings.length == 3) {
                String username = strings[1].substring(3);
                String password = strings[2].substring(3);
                if(Utilizator.verifica_utilizator_unic(username) == 1) { //nu exista acest user
                    System.out.print("{ 'status' : 'error', 'message' : 'Login failed'}");
                } else { //exista
                    if(Utilizator.check_password(username,password) == 0) { //credentiale proaste
                        System.out.print("{ 'status' : 'error', 'message' : 'Login failed'}");
                    } else { //credentiale bune
                        Utilizator user = null;
                        for(int i = 0; i < Utilizator.numar_utilizatori;i++)
                            if(Utilizator.utilizatori[i].nume_utilizator.equals(username)) {
                                user = Utilizator.utilizatori[i];
                                break;
                            }
                        if(user != null)
                            user.getFollowing();
                    }
                }
            }
        } else if(strings[0].equals("-get-followers")) {
            if(strings.length == 1) {
                System.out.print("{ 'status' : 'error', 'message' : 'You need to be authenticated'}");
            } else if(strings.length == 2) {
                System.out.print("{ 'status' : 'error', 'message' : 'You need to be authenticated'}");
            } else if(strings.length == 3) {
                String username = strings[1].substring(3);
                String password = strings[2].substring(3);
                if(Utilizator.verifica_utilizator_unic(username) == 1) { //nu exista user
                    System.out.print("{ 'status' : 'error', 'message' : 'Login failed'}");
                } else { //exista
                    if(Utilizator.check_password(username,password) == 0) { //credentiale gresite
                        System.out.print("{ 'status' : 'error', 'message' : 'Login failed'}");
                    } else { //credentiale bune
                        System.out.print("{ 'status' : 'error', 'message' : 'No username to list followers was provided'}");
                    }
                }
            } else if(strings.length == 4) {
                String username2 = strings[3].substring(10);
                if(Utilizator.verifica_utilizator_unic(username2) == 1) { //NU EXISTA
                    System.out.print("{ 'status' : 'error', 'message' : 'The username to list followers was not valid'}");
                } else { //exista
                    Utilizator user2 = null;
                    for(int i = 0; i < Utilizator.numar_utilizatori;i++)
                        if(Utilizator.utilizatori[i].nume_utilizator.equals(username2)) {
                            user2 = Utilizator.utilizatori[i];
                            break;
                        }
                    user2.getFollowers();
                }
            }
        } else if(strings[0].equals("-get-most-liked-posts")) {
            if(strings.length == 1) {
                System.out.print("{ 'status' : 'error', 'message' : 'You need to be authenticated'}");
            } else if(strings.length == 2) {
                System.out.print("{ 'status' : 'error', 'message' : 'You need to be authenticated'}");
            } else if(strings.length == 3) {
                String username = strings[1].substring(3);
                String password = strings[2].substring(3);
                if(Utilizator.verifica_utilizator_unic(username) == 1) { //nu exista acest user
                    System.out.print("{ 'status' : 'error', 'message' : 'Login failed'}");
                } else { //exista
                    if(Utilizator.check_password(username,password) == 0) { //credentiale gresite
                        System.out.print("{ 'status' : 'error', 'message' : 'Login failed'}");
                    } else { //credentiale bune
                        Postare.getMostLikedPosts();
                    }
                }
            }
        } else if(strings[0].equals("-get-most-commented-posts")) {
            if(strings.length == 1) {
                System.out.print("{ 'status' : 'error', 'message' : 'You need to be authenticated'}");
            } else if(strings.length == 2) {
                System.out.print("{ 'status' : 'error', 'message' : 'You need to be authenticated'}");
            } else if(strings.length == 3) {
                String username = strings[1].substring(3);
                String password = strings[2].substring(3);
                if(Utilizator.verifica_utilizator_unic(username) == 1) { //nu exista
                    System.out.print("{ 'status' : 'error', 'message' : 'Login failed'}");
                } else { //exista
                    if(Utilizator.check_password(username,password) == 0) { //credentiale gresite
                        System.out.print("{ 'status' : 'error', 'message' : 'Login failed'}");
                    } else { //credentiale corecte
                        Postare.getMostCommentedPosts();
                    }
                }
            }
        } else if(strings[0].equals("-get-most-followed-users")) {
            if(strings.length == 1) {
                System.out.print("{ 'status' : 'error', 'message' : 'You need to be authenticated'}");
            } else if(strings.length == 2){
                System.out.print("{ 'status' : 'error', 'message' : 'You need to be authenticated'}");
            } else if(strings.length == 3){
                String username = strings[1].substring(3);
                String password = strings[2].substring(3);
                if(Utilizator.verifica_utilizator_unic(username) == 1) { //nu exista user-ul
                    System.out.print("{ 'status' : 'error', 'message' : 'Login failed'}");
                } else { //exista
                    if(Utilizator.check_password(username,password) == 0) { //credentiale gresite
                        System.out.print("{ 'status' : 'error', 'message' : 'Login failed'}");
                    } else { //credentiale bune
                        Utilizator.getMostFollowedUsers();
                    }
                }
            }
        } else if(strings[0].equals("-get-most-liked-users")) {
            if(strings.length == 1) {
                System.out.print("{ 'status' : 'error', 'message' : 'You need to be authenticated'}");
            } else if(strings.length == 2) {
                System.out.print("{ 'status' : 'error', 'message' : 'You need to be authenticated'}");
            } else if(strings.length == 3) {
                String username = strings[1].substring(3);
                String password = strings[2].substring(3);
                if(Utilizator.verifica_utilizator_unic(username) == 1) {
                    System.out.print("{ 'status' : 'error', 'message' : 'Login failed'}");
                } else {
                    if(Utilizator.check_password(username,password) == 0) {
                        System.out.print("{ 'status' : 'error', 'message' : 'Login failed'}");
                    } else {
                        Utilizator.getMostLikedUsers();
                    }
                }
            }
        }


    }


}

